CMAKE_MINIMUM_REQUIRED(VERSION 3.10)

PROJECT(nrtrace)
SET(TARGET nrtrace)

IF(ARCH STREQUAL "aarch64")
    SET(BIT32 arm)
    SET(BIT64 aarch64)
ELSE()
    SET(BIT32 x86)
    SET(BIT64 x86_64)
ENDIF()

ADD_COMPILE_OPTIONS(-std=gnu2x -O2 -W -Wall -Wextra -Wextra)
ADD_COMPILE_OPTIONS(-D_FILE_OFFSET_BITS=64)
ADD_COMPILE_OPTIONS(-D_LARGEFILE64_SOURCE)

FILE(GLOB BIT32_HEADERS_LIST cfg/${BIT32}/*.h)
FILE(GLOB BIT64_HEADERS_LIST cfg/${BIT64}/*.h)

SET(MKH_SH "${CMAKE_CURRENT_LIST_DIR}/tool/make_header.sh")
SET(MKU_SH "${CMAKE_CURRENT_LIST_DIR}/tool/make_uni_header.sh")
SET(TYPEUN "${CMAKE_CURRENT_BINARY_DIR}/gen/type_uni.h")
SET(TYPE64 "${CMAKE_CURRENT_BINARY_DIR}/gen/type_64.h")
SET(TYPE32 "${CMAKE_CURRENT_BINARY_DIR}/gen/type_32.h")

SET(TABLUN "${CMAKE_CURRENT_BINARY_DIR}/gen/table_uni.h")
SET(TABL64 "${CMAKE_CURRENT_BINARY_DIR}/gen/table_64.h")
SET(TABL32 "${CMAKE_CURRENT_BINARY_DIR}/gen/table_32.h")

SET(PRNTUN "${CMAKE_CURRENT_BINARY_DIR}/gen/print_uni.h")
SET(PRNT64 "${CMAKE_CURRENT_BINARY_DIR}/gen/print_64.h")
SET(PRNT32 "${CMAKE_CURRENT_BINARY_DIR}/gen/print_32.h")

SET(SRCUN "${CMAKE_CURRENT_BINARY_DIR}/gen/uni.c")

SET(HDR32 ${TYPE32} ${TABL32} ${PRNT32})
SET(HDR64 ${TYPE64} ${TABL64} ${PRNT64})
SET(HDRUN ${TYPEUN} ${TABLUN} ${PRNTUN})

ADD_CUSTOM_COMMAND(OUTPUT ${HDR32}
    COMMAND ${MKH_SH} "${BIT32}" "32" ${HDR32}
    DEPENDS ${MKH_SH} ${BIT32_HEADERS_LIST}
    WORKING_DIRECTORY ${CMAKE_CURRENT_LIST_DIR})

ADD_CUSTOM_COMMAND(OUTPUT ${HDR64}
    COMMAND ${MKH_SH} "${BIT64}" "64" ${HDR64}
    DEPENDS ${MKH_SH} ${BIT64_HEADERS_LIST}
    WORKING_DIRECTORY ${CMAKE_CURRENT_LIST_DIR})

ADD_CUSTOM_COMMAND(OUTPUT ${HDRUN} ${SRCUN}
    COMMAND ${MKU_SH} ${CMAKE_CURRENT_BINARY_DIR} ${HDRUN} ${SRCUN}
    DEPENDS ${HDR64} ${HDR32} ${MKU_SH} cfg/syscall_list.h cfg/syscall_print_entry.h
    WORKING_DIRECTORY ${CMAKE_CURRENT_LIST_DIR})

ADD_LIBRARY(sys_uni ${TYPEUN} ${TABLUN} ${PRNTUN} ${SRCUN})
TARGET_INCLUDE_DIRECTORIES(sys_uni PUBLIC cfg)
TARGET_LINK_LIBRARIES(sys_uni INTERFACE printer util_header)
TARGET_INCLUDE_DIRECTORIES(sys_uni INTERFACE $<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}/gen>)

ADD_LIBRARY(util_header INTERFACE)
TARGET_INCLUDE_DIRECTORIES(util_header INTERFACE $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src/util_header>)

ADD_LIBRARY(num_to_str STATIC src/num_to_str/num_to_str.c)
TARGET_LINK_LIBRARIES(num_to_str PRIVATE util_header)
TARGET_INCLUDE_DIRECTORIES(num_to_str INTERFACE $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src/num_to_str/inc>)

ADD_LIBRARY(vl_buffer INTERFACE)
TARGET_INCLUDE_DIRECTORIES(vl_buffer INTERFACE $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src/vl_buffer/inc>)

ADD_LIBRARY(vl_array STATIC src/vl_array/vl_array.c)
TARGET_LINK_LIBRARIES(vl_array PRIVATE vl_buffer util_header)
TARGET_INCLUDE_DIRECTORIES(vl_array INTERFACE $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src/vl_array/inc>)

ADD_LIBRARY(string_buffer STATIC src/string_buffer/string_buffer.c)
TARGET_LINK_LIBRARIES(string_buffer PRIVATE vl_buffer util_header num_to_str)
TARGET_INCLUDE_DIRECTORIES(string_buffer INTERFACE $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src/string_buffer/inc>)

ADD_LIBRARY(peek STATIC src/peek/peek.c src/peek/syscall_info.c)
TARGET_LINK_LIBRARIES(peek PUBLIC util_header sys_uni)
TARGET_INCLUDE_DIRECTORIES(peek INTERFACE $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src/peek/inc>)

FILE(GLOB PRINTER_SRC_FILES CONFIGURE_DEPENDS "src/printer/*.c")
ADD_LIBRARY(printer STATIC ${PRINTER_SRC_FILES})
TARGET_LINK_LIBRARIES(printer PUBLIC peek string_buffer sys_uni)
TARGET_INCLUDE_DIRECTORIES(printer INTERFACE $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src/printer/inc>)

ADD_LIBRARY(lib${TARGET} src/tracer.c)
TARGET_LINK_LIBRARIES(lib${TARGET} printer peek string_buffer vl_array util_header sys_uni)
TARGET_INCLUDE_DIRECTORIES(lib${TARGET} PRIVATE .)
TARGET_INCLUDE_DIRECTORIES(lib${TARGET} PRIVATE src)

ADD_EXECUTABLE(${TARGET} src/main.c)
TARGET_LINK_LIBRARIES(${TARGET} lib${TARGET})

INCLUDE(CheckIPOSupported)
CHECK_IPO_SUPPORTED(RESULT IPO_SUPPORT OUTPUT IPO_OUT)
IF(IPO_SUPPORT)
    SET_PROPERTY(TARGET ${TARGET} PROPERTY INTERPROCEDURAL_OPTIMIZATION TRUE)
ELSE()
    MESSAGE(WARNING "IPO not suppored: ${IPO_OUT}")
ENDIF()
TARGET_LINK_OPTIONS(${TARGET} PRIVATE -static -s)

