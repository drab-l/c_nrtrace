#pragma once

#include <limits.h>
#include <stddef.h>
#include <stdint.h>
#include <sys/types.h>

enum syscall_print_type {
    /* basic print types
     * SYSCALL_PRINT_<TYPE>[LENGTH][COND]
     * LENGTH : V=variable length, R=return value, <num>=arg<num> value, F=fixed.
     * COND : description of print condition.
     */
    SYSCALL_PRINT_NONE = 0,
    SYSCALL_PRINT_VOID,
    SYSCALL_PRINT_INT,
    SYSCALL_PRINT_UINT,
    SYSCALL_PRINT_LONG,
    SYSCALL_PRINT_ULONG,
    SYSCALL_PRINT_LLONG,
    SYSCALL_PRINT_ULLONG,
    SYSCALL_PRINT_INT_HEX,
    SYSCALL_PRINT_REG_HEX,
    SYSCALL_PRINT_ADDR,
    SYSCALL_PRINT_PTR2INT,
    SYSCALL_PRINT_PTR2PTR,
    SYSCALL_PRINT_PTR2SIZE,
    SYSCALL_PRINT_PTR2STR_V,
    SYSCALL_PRINT_PTR2STR_R,
    SYSCALL_PRINT_PTR2VAR_3,
    SYSCALL_PRINT_PTR2VAR_4,
    SYSCALL_PRINT_PTR2VAR_R,
    SYSCALL_PRINT_PTR2HEX_3,

    SYSCALL_PRINT_PTR2VAR_R_IF_R_4_POSI_NUM,
    SYSCALL_PRINT_PTR2DIRENT_R,
    SYSCALL_PRINT_PTR2DIRENT64_R,
    SYSCALL_PRINT_PTR2STAT_F,
    SYSCALL_PRINT_PTR2STAT64_F,
    SYSCALL_PRINT_PTR2STATX_F,
    SYSCALL_PRINT_PTR2STATFS_F,
    SYSCALL_PRINT_PTR2STATFS64_F,
    SYSCALL_PRINT_PTR2RLIMIT_F,
    SYSCALL_PRINT_PTR2RLIMIT64_F,
    SYSCALL_PRINT_PTR2EPOLL_EVENT_F,
    SYSCALL_PRINT_PTR2EPOLL_WAIT_EVENT_V,
    SYSCALL_PRINT_PTR2PPOLL_POLLFD_V,
    SYSCALL_PRINT_PTR2SOCKADDR_3,
    SYSCALL_PRINT_PTR2SOCKADDR_6,
    SYSCALL_PRINT_PTR2SOCKADDR_PEEK3,
    SYSCALL_PRINT_PTR2SOCKADDR_IF_R = SYSCALL_PRINT_PTR2SOCKADDR_PEEK3,
    SYSCALL_PRINT_PTR2SOCKLEN,
    SYSCALL_PRINT_PTR2SOCKLEN_IF_R = SYSCALL_PRINT_PTR2SOCKLEN,
    SYSCALL_PRINT_PTR2TIMESPEC_F,
    SYSCALL_PRINT_PTR2PIPE_F,
    SYSCALL_PRINT_PTR2STR_NULL_DELIM_R,
    SYSCALL_PRINT_PTR2OFF_T_F,
    SYSCALL_PRINT_PTR2MSGHDR,
    SYSCALL_PRINT_PTR2STR_ARRAY,
    SYSCALL_PRINT_PTR2IOVEC_3,
    SYSCALL_PRINT_PTR2IOVEC_3_R,
    SYSCALL_PRINT_SOCKETCALL_NAME,
    SYSCALL_PRINT_SOCKETCALL_ARG,
    SYSCALL_PRINT_IOCTL_ARGS,
    SYSCALL_PRINT_FCNTL_ARGS,
    SYSCALL_PRINT_CLOCK_ID,
    SYSCALL_PRINT_EMPTY,
    SYSCALL_PRINT_TEST,
    SYSCALL_PRINT_TERM,

    /* alias print types */
#if SIZE_MAX == UINT_MAX
    SYSCALL_PRINT_SIZE = SYSCALL_PRINT_UINT,
    SYSCALL_PRINT_SSIZE = SYSCALL_PRINT_INT,
#elif SIZE_MAX == ULONG_MAX
    SYSCALL_PRINT_SIZE = SYSCALL_PRINT_ULONG,
    SYSCALL_PRINT_SSIZE = SYSCALL_PRINT_LONG,
#elif SIZE_MAX == ULLONG_MAX
    SYSCALL_PRINT_SIZE = SYSCALL_PRINT_ULLONG,
    SYSCALL_PRINT_SSIZE = SYSCALL_PRINT_LLONG,
#else
#error size_t is not valid size.
#endif
    SYSCALL_PRINT_OFF_T = SYSCALL_PRINT_SSIZE,
    SYSCALL_PRINT_SOCKLEN = SYSCALL_PRINT_SSIZE,

    SYSCALL_PRINT_PTR2GETXATTR_VALUE = SYSCALL_PRINT_PTR2VAR_R_IF_R_4_POSI_NUM, /* getxattr value */

    /* in/out print types */
#define SYSCALL_PRINT_IN_MASK 0x7FFF
#define SYSCALL_PRINT_IN_SHIFT 0
#define SYSCALL_PRINT_OUT_SHIFT 16
#define SYSCALL_PRINT_OUT_MASK (SYSCALL_PRINT_IN_MASK << SYSCALL_PRINT_OUT_SHIFT)
#define GET_SYSCALL_PRINT_IN(x_) (((x_) <= SYSCALL_PRINT_LIMIT) ? (x_) : (((x_) & SYSCALL_PRINT_IN_MASK) >> SYSCALL_PRINT_IN_SHIFT))
#define GET_SYSCALL_PRINT_OUT(x_) (((x_) <= SYSCALL_PRINT_LIMIT) ? (x_) : (((x_) & SYSCALL_PRINT_OUT_MASK) >> SYSCALL_PRINT_OUT_SHIFT))
#define DEF_SYSCALL_IN_OUT_PRINT(in_, out_) SYSCALL_PRINT_IN_##in_##_OUT_##out_ = (SYSCALL_PRINT_##in_ << SYSCALL_PRINT_IN_SHIFT)|(SYSCALL_PRINT_##out_ << SYSCALL_PRINT_OUT_SHIFT)
#define DEF_SYSCALL_INOUT_PRINT(inout_) SYSCALL_PRINT_INOUT_##inout_ = (SYSCALL_PRINT_##inout_ << SYSCALL_PRINT_IN_SHIFT)|(SYSCALL_PRINT_##inout_ << SYSCALL_PRINT_OUT_SHIFT)
    SYSCALL_PRINT_LIMIT = SYSCALL_PRINT_IN_MASK,
    DEF_SYSCALL_IN_OUT_PRINT(ADDR, PTR2STR_R),
    DEF_SYSCALL_IN_OUT_PRINT(ADDR, PTR2VAR_R),
    DEF_SYSCALL_IN_OUT_PRINT(ADDR, PTR2DIRENT_R),
    DEF_SYSCALL_IN_OUT_PRINT(ADDR, PTR2DIRENT64_R),
    DEF_SYSCALL_IN_OUT_PRINT(ADDR, PTR2STAT_F),
    DEF_SYSCALL_IN_OUT_PRINT(ADDR, PTR2STAT64_F),
    DEF_SYSCALL_IN_OUT_PRINT(ADDR, PTR2STATX_F),
    DEF_SYSCALL_IN_OUT_PRINT(ADDR, PTR2STATFS_F),
    DEF_SYSCALL_IN_OUT_PRINT(ADDR, PTR2STATFS64_F),
    DEF_SYSCALL_IN_OUT_PRINT(ADDR, PTR2RLIMIT_F),
    DEF_SYSCALL_IN_OUT_PRINT(ADDR, PTR2RLIMIT64_F),
    DEF_SYSCALL_IN_OUT_PRINT(ADDR, PTR2TIMESPEC_F),
    DEF_SYSCALL_IN_OUT_PRINT(ADDR, PTR2PIPE_F),
    DEF_SYSCALL_IN_OUT_PRINT(ADDR, PTR2GETXATTR_VALUE),
    DEF_SYSCALL_IN_OUT_PRINT(ADDR, PTR2STR_NULL_DELIM_R),
    DEF_SYSCALL_IN_OUT_PRINT(ADDR, PTR2OFF_T_F),
    DEF_SYSCALL_IN_OUT_PRINT(ADDR, PTR2EPOLL_WAIT_EVENT_V),
    DEF_SYSCALL_IN_OUT_PRINT(ADDR, PTR2MSGHDR),
    DEF_SYSCALL_IN_OUT_PRINT(ADDR, PTR2SOCKADDR_IF_R),
    DEF_SYSCALL_IN_OUT_PRINT(ADDR, PTR2SOCKLEN_IF_R),
    DEF_SYSCALL_IN_OUT_PRINT(ADDR, PTR2IOVEC_3_R),
    DEF_SYSCALL_IN_OUT_PRINT(IOCTL_ARGS, IOCTL_ARGS),
    DEF_SYSCALL_IN_OUT_PRINT(FCNTL_ARGS, FCNTL_ARGS),
    DEF_SYSCALL_IN_OUT_PRINT(SOCKETCALL_ARG, SOCKETCALL_ARG),
    DEF_SYSCALL_INOUT_PRINT(PTR2PPOLL_POLLFD_V),
    DEF_SYSCALL_INOUT_PRINT(TEST),
    SYSCALL_PRINT_RET_TERM,
};

_Static_assert(sizeof(ssize_t) == sizeof(off_t), "set valid SYSCALL_PRINT_OFF_T, and disable this assert.");
_Static_assert(sizeof(enum syscall_print_type) >= 4, "enum do'nt have enough size.");
_Static_assert(SYSCALL_PRINT_TERM <= SYSCALL_PRINT_LIMIT, "print type is too large.");
